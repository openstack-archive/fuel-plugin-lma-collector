# <%= @service_name %>

description     "<%= @service_name %>"

start on runlevel [2345]
stop on runlevel [!2345]

respawn

<% unless @run_as_root -%>
pre-start script
    # We must wait that rabbitmq is started before running.
    # We can not rely on /var/run/rabbitmq/p_pid because it only means that
    # beam is running. If there is no command rabbitmqctl, just skip the
    # waiting loop.
    set +e
    RABBITMQCTL=$(which rabbitmqctl 2>/dev/null)
    set -e

    if [ ! -z $RABBITMQCTL ]; then
        while ! $RABBITMQCTL cluster_status >/dev/null 2>&1
        do
            echo "$(date +"%Y/%m/%d %H:%M:%S") Waiting for RabbitMQ availability..."
            sleep <%= @wait_for_rabbitmq %>
        done
    fi

    touch <%= @log_file %>
    chown <%= @heka_user %>:<%= @heka_user %> <%= @log_file %>
end script
<% end -%>

exec <%= @run_as_root ? "" : "sudo -u #{ @heka_user }" %> /usr/bin/hekad -config=<%= @config_dir %> 2>><%= @log_file %>
